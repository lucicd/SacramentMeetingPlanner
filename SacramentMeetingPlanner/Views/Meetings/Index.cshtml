@model SacramentMeetingPlanner.Models.MeetingViewModels.MeetingIndexData;

@{
    ViewData["Title"] = "Sacrament Meetings";
}

<h2>Sacrament Meetings</h2>

<p>
    <a class="btn btn-danger" asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-sm btn-default" />
            <a class="btn btn-sm btn-info" asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table table-hover table-sm">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Meeting&nbsp;Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Conducting</a>
            </th>
            <th>
                Invocation
            </th>
            <th>
                Songs
            </th>
            <th>
                Benediction
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Meetings)
        {
            string selectedRow = "";
            if (item.ID == (int?)ViewData["MeetingID"])
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">
                <td>
                    <a class="btn btn-sm btn-primary" asp-action="Details" asp-route-id="@item.ID">
                        @Html.DisplayFor(modelItem => item.MeetingDate)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Conducting)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Invocation)
                </td>
                <td>
                    <dl class="row">
                        <dt class="col-sm-3">Opening:</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(modelItem => item.OpeningSong)</dd>
                        <dt class="col-sm-3">Sacrament: </dt>
                        <dd class="col-sm-9">@Html.DisplayFor(modelItem => item.SacramentSong)</dd>
                        @if (item.IntermediateSong != null && item.IntermediateSong.Length > 0)
                        {
                            <dt class="col-sm-3">Intermediate:</dt>
                            <dd class="col-sm-9">@Html.DisplayFor(modelItem => item.IntermediateSong)</dd>
                        }
                        <dt class="col-sm-3">Closing: </dt>
                        <dd class="col-sm-9">@Html.DisplayFor(modelItem => item.ClosingSong)</dd>
                    </dl>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Benediction)
                </td>
                <td class="text-center">
                    @{
                        var numSpeakers = item.Speakers.Count().ToString();
                    }
                    <div class="col-sm-12">
                        <a class="btn btn-sm btn-success btn-block w-100" asp-controller="Speakers" asp-action="Index" asp-route-meetingId="@item.ID">
                            Speakers
                            <span class="badge badge-light">@numSpeakers</span>
                        </a>
                        <a class="btn btn-sm btn-primary btn-block w-100" asp-action="Index" asp-route-id="@item.ID">Select</a>
                        <a class="btn btn-sm btn-primary btn-block w-100" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
                        <a class="btn btn-sm btn-warning btn-block w-100" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Meetings.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Meetings.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.Meetings.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-sm btn-dark @prevDisabled">
    Previous
</a>
<a 
    asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.Meetings.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-sm btn-dark @nextDisabled">
    Next
</a>

@if (Model.Speakers != null)
{
<div>
    <hr />
    <h3>Speakers for the Selected Meeting</h3>
    <table class="table table-sm">
        <tr>
            <th>Name</th>
            <th>Subject</th>
            <th>Block</th>
            <th class="text-center">Order</th>
        </tr>

        @foreach (var item in Model.Speakers.OrderBy(s => s.Block).ThenBy(s => s.Order))
        {
            <tr>
                <td>
                    @item.SpeakerName
                </td>
                <td>
                    @item.Subject
                </td>
                <td>
                    @item.Block
                </td>
                <td class="text-center">
                    @item.Order
                </td>
            </tr>
        }

    </table>
</div>
}